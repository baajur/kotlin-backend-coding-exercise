FORMAT: 1A

# Excercise

A simple  API that will allow consumers to create, 
read, update and delete on certain entities, namely: Company, Employee, Dependant.
NOTE: This document is a **work in progress**.

# Group Companies

## Companies  [/companies]

### List Companies [GET]
List All companies 
+ Response 200 (application/json)

        [
            {
                "companyId":1,
                "companyName":"Bayzat",
                "address":{
                    "city":"Dubai",
                    "country":"UAE"
                }
            },
            {
                "companyId":5,
                "companyName":"Bayzat","
                 address":{
                    "city":"Dubai",
                    "country":"UAE"
                }
            }
        ]

        
        

### Create Company [POST]

You may create your own company using this resource. It takes a JSON object
containing a name and a Address object. 
NOTE: company's name should be unique 

+ name (string) - name of the company
+ address (object) - an object which contains the adress of the company

+ Request (application/json)

        {
           "companyName": "Bayzat",
           "address": {
               "city": "Dubai",
               "country": "UAE"
            }
        }

+ Response 200 (application/json)

    + Headers

            Location: /companies/1
            



### Update [PUT]
Update company
+ Response 204

+ Response 404 (application/json)


### Delete [DELETE]
Delete a company.
**Warning:** This action **permanently** removes company, employees and it's
dependant from the database.

+ Response 200

+ Response 404 (application/json)

            

## Retreive Company By ID Company [/companies/{companyId}]
This resource represents one particular company identified by its *company_id*.
This resource will return company object which has the following attributes:

+ companyId (number): 1 
+ companyName (string) : Bayzat - name of the company
+ address (object)- an object which contains the adress of the company 
   + city (string):  Dubai
   + country (string): UAE

+ Parameters
    + companyId: 1 (required, number) - ID of the company in form of an integer

### Retreive Company By ID Company [GET]
+ Response 200 (application/json)
   
   + Body
       
            {
                "companyId":1,
                "companyName":"Bayzat",
                "address":{
                    "city":"Dubai",
                    "state":"UAE"
                },
            }
+ Response 404 (application/json)

# Group Employees

## Employees Resources  [/employees]

### List Employees [GET]
List All employees
+ Response 200 (application/json)

        {
            "employeeId": 2,
            "name": "John",
            "phoneNumber": "+97111",
            "gender": "MALE",
            "dateOfBirth": "1990-01-14",
            "salary": 1500.0
        }
+ Response 404 (application/json)

    + Body
    
            {
                "code":1000,
                "message":"Resouroce not found.",
                "timestamp":"2018-06-09T10:00:48.814Z"
            }

## Retrieve Employee By ID [/employees/{employeeId}]
This resource represents one particular employee identified by its *employee_id*.
This resource will return employee object which has the following attributes:

+ employeeId (number)
+ employeeName  (string)
+ phoneNumber (string)
+ gender (enum[string]) - the gender can be MALE, FEMALE or OTHER 
+ dateOfBirth : (string)
+ salary (double)
+ company (number) - comapny's ID

+ Parameters
    + employeeId: 1 (required, number) - ID of the employee in form of an integer

### Retreive Employee By ID [GET]
+ Response 200 (application/json)

    + Body
    
            {
                "employeeId": 2,
                "employeeName": "John",
                "phoneNumber": "+97111",
                "gender": "MALE",
                "dateOfBirth": "1990-01-14",
                "salary": 1500.0
            }
            
+ Response 404 (application/json)

    

### Update [PUT]
Update company
+ Response 204
+ Response 404 (application/json)

    

### Delete [DELETE]
Delete a company.
**Warning:** This action **permanently** removes employees and it's
dependant from the database.

+ Response 204
+ Response 404 (application/json)

    



### Create Employee [POST]

You may create your employee using this resource. It takes a JSON object
containing employee object which has the following attributes: 

+ employeeId (number)
+ name  (string)
+ phoneNumber (string)
+ gender (enum[string]) - the gender can be MALE, FEMALE or OTHER 
+ dateOfBirth : (string)
+ salary (double)

+ Request (application/json)

           {
              "name": "Kamal",
              "phoneNumber": "+97111",
              "gender": "MALE",
              "dateOfBirth": "1990-01-14",
              "salary": 1500,
              "company": {
                    "companyId": 1,
                    "name": "Bayzat",
                    "address": {
                          "city": "Dubai",
                          "state": "UAE"
                     }
                }
            }

+ Response 201 (application/json)

    + Headers

            Location: /employees/1
            
+ Response 409 (application/json)  


            

# Group Dependants

## Dependants Resources  [/dependants]   

### Create Dependant [POST]
You may create your dependant using this resource. It takes a JSON object
containing dependant object which has the following attributes: 
NOTE: dependant name should be unique 

+ dependantId (number)
+ name  (string)
+ phoneNumber (string)
+ gender (enum[string]) - the gender can be MALE, FEMALE or OTHER 
+ dateOfBirth : (string)
+ relation (enum[string])

+ Request (application/json)

           {
              "phoneNumber": "05555",
              "gender": "FEMALE",
              "dateOfBirth": "1990-01-14",
              "relation": "MOTHER",
              "employee": {
                    "employeeId": 2,
                    "name": "John",
                    "phoneNumber": "+97111",
                    "gender": "MALE",
                    "dateOfBirth": "1990-01-14",
                    "salary": 1500
                }
            }

+ Response 201 (application/json)

    + Headers

            Location: /dependants/1
            
+ Response 409 (application/json)  

    + Body
            
            {
                "code":1001,
                "message":"Resource already exist",
                "timestamp":"2018-06-09T19:11:06.690Z"
            }
            


### Update [PUT]
Update company
+ Response 204
+ Response 404 (application/json)

    + Body
    
            {
                "code":1000,
                "message":"Resouroce not found.",
                "timestamp":"2018-06-09T10:00:48.814Z"
            }

### Delete [DELETE]
Delete a company.
**Warning:** This action **permanently** removes dependants from the database.

+ Response 204
+ Response 404 (application/json)

    + Body
    
            {
                "code":1000,
                "message":"Resouroce not found.",
                "timestamp":"2018-06-09T10:00:48.814Z"
            }

### Retrieve All Dependants [GET]
List All dependants
+ Response 200 (application/json)

        [
            {
                "dependantId":3,
                "name":"Dependent1",
                "phoneNumber":"05555",
                "gender":"FEMALE",
                "dateOfBirth":"1990-01-14",
                "relation":"MOTHER"
            },
            {
                "dependantId":4,
                "name":"Dependent2",
                "phoneNumber":"05555",
                "gender":"FEMALE",
                "dateOfBirth":"1990-01-14",
                "relation":"MOTHER"
            }
        ]
        
        
+ Response 404 (application/json)

    + Body
    
            {
                    "code":1000,
                    "message":"Resouroce not found.",
                    "timestamp":"2018-06-09T10:00:48.814Z"
            }




## Retrieve Dependant By ID [/dependants/{dependantId}]
This resource represents one particular Dependant (object) identified by its *dependant_id*.
This resource will return Dependant object which has the following attributes:

+ dependantId (number)
+ name  (string)
+ phoneNumber (string)
+ gender (enum[string]) - the gender can be MALE, FEMALE or OTHER 
+ dateOfBirth : (string)
+ relation (enum[string])

+ Parameters
    + dependantId: 1 (required, number) - ID of the Dependant in form of an integer

### Retreive Dependant By ID [GET]
+ Response 200 (application/json)

    + Body
    
            {
                  "dependantId": 3,
                  "name": "Dependent1",
                  "phoneNumber": "05555",
                  "gender": "FEMALE",
                  "dateOfBirth": "1990-01-14",
                  "relation": "MOTHER"
            }
            
+ Response 404 (application/json)

    + Body
    
            {
                "code":1000,
                "message":"Resouroce not found.",
                "timestamp":"2018-06-09T10:00:48.814Z"
            }